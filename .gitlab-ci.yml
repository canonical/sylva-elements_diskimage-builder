---

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        OCI_TAG_FORMAT: "$CI_COMMIT_TAG"
    - when: always
      variables:
        OCI_TAG_FORMAT: "0.0.0-git-$CI_COMMIT_SHORT_SHA"

variables:
  REPO_URL: "$CI_REGISTRY_IMAGE"
  REPO_IMAGE: $REPO_URL/$DISK_IMAGE_NAME:$OCI_TAG_FORMAT
  REPO_IMAGE_SNAPSHOT: $REPO_URL/snapshots/$DISK_IMAGE_NAME:$OCI_TAG_FORMAT
  IMAGE_FORMAT: qcow2
  DISK_IMAGE_NAME: $OS-$OS_RELEASE-$FLAVOR-$K8S_FLAVOR
  GITLEAKS_ARGS: '--verbose --log-opts=$CI_COMMIT_SHA'
  DIB_SHOW_IMAGE_USAGE: 1
  DIB_DEBUG_TRACE: 1

stages:
  - test
  - build
  - release

include:
  - project: 'renovate-bot/renovate-runner'
    ref: v17.12.1
    file: '/templates/renovate-config-validator.gitlab-ci.yml'
    rules:
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          paths:
            - .gitlab-ci.yml
            - renovate.json
  - project: 'sylva-projects/sylva-elements/renovate'
    ref: 1.0.0
    file: '/templates/renovate-dry-run.gitlab-ci.yml'
    rules:
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          paths:
            - renovate.json
  - project: "to-be-continuous/gitleaks"
    ref: 2.2.3
    file: "templates/gitlab-ci-gitleaks.yml"


.default-trigger:
  trigger:
    include: .gitlab/ci/pipeline-build-and-test.yml
    strategy: depend
  parallel:
    matrix:
      - K8S_VERSION:
          - 1.26.9-rke2r1
          - 1.25.14-rke2r1
          - 1.24.17-rke2r1
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual

build-ubuntu-hardened-rke2:
  extends: .default-trigger
  variables:
    OS: ubuntu
    OS_RELEASE: jammy
    FLAVOR: hardened
    K8S_FLAVOR: rke2
    IMAGE_FORMAT: raw
    KANOD_OPTIONS: "-b no_kanod_network -b cis_remediation -b lvm -b rke2_airgapped -b growpart"

build-ubuntu-plain-rke2:
  extends: .default-trigger
  variables:
    OS: ubuntu
    OS_RELEASE: jammy
    FLAVOR: plain
    K8S_FLAVOR: rke2
    IMAGE_FORMAT: raw
    KANOD_OPTIONS: "-b no_kanod_network -b rke2_airgapped"

build-ubuntu-plain-kubeadm:
  extends: .default-trigger
  variables:
    OS: ubuntu
    OS_RELEASE: jammy
    FLAVOR: plain
    K8S_FLAVOR: kubeadm
    IMAGE_FORMAT: raw
    KANOD_OPTIONS: "-b no_kanod_network -b kubeadm"

build-opensuse-plain-rke2:
  extends: .default-trigger
  trigger:
    include: .gitlab/ci/pipeline-build-and-test-suse.yml
    strategy: depend
  variables:
    OS: opensuse
    OS_RELEASE: "15.5"
    FLAVOR: plain
    K8S_FLAVOR: rke2
    IMAGE_FORMAT: raw
    KANOD_OPTIONS: "-b no_kanod_network -b rke2_airgapped"

prepare_job:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED # Run this job when a tag is created for a protected branch
      when: always
  script:
    - |
      echo "EXTRA_DESCRIPTION=$(for artifact in $(env | grep BUILD_IMAGE); do
        job_id=$(echo ${artifact/=*/} | cut -d_ -f3)
        checksum="BUILD_CHECKSUM_$job_id"
        echo -n "<br /> Image: ${artifact/*=/}<br /> Checksum: ${!checksum}<br />"
      done
      )" >> variables.env
  artifacts:
    paths:
      - variables.env
    reports:
      dotenv: variables.env

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED # Run this job when a tag is created for a protected branch
      when: always
  script:
    - echo "running release_job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release content: <br /> $EXTRA_DESCRIPTION'
    ref: '$CI_COMMIT_SHA'
