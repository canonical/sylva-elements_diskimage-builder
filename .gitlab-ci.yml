---

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        OCI_TAG_FORMAT: "$CI_COMMIT_TAG"
    - when: always
      variables:
        OCI_TAG_FORMAT: "0.0.0-git-$CI_COMMIT_SHORT_SHA"
  
variables:
  REPO_URL: "oci://$CI_REGISTRY_IMAGE"
  IMAGE_FORMAT: qcow2
  K8S_VERSION: ""
  DISK_IMAGE_NAME: $OS-$OS_RELEASE-$FLAVOR-$K8S_FLAVOR

stages:
  - test
  - build
  - release
  - sign

include:
  - project: 'renovate-bot/renovate-runner'
    ref: v16.22.6
    file: '/templates/renovate-config-validator.gitlab-ci.yml'
    rules:
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          paths:
            - .gitlab-ci.yml
            - renovate.json
  - project: 'sylva-projects/sylva-elements/renovate'
    ref: 1.0.0
    file: '/templates/renovate-dry-run.gitlab-ci.yml'
    rules:
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          paths:
            - renovate.json
  - project: "to-be-continuous/gitleaks"
    ref: 2.2.3
    file: "templates/gitlab-ci-gitleaks.yml"

.build-image:
  stage: build
  needs: []
  tags:
    - saas-linux-medium-amd64
  image: registry.gitlab.com/sylva-projects/sylva-elements/container-images/ci-disk-image-builder/ubuntu:v2.0.0
  before_script:
    - pip3 install kanod-image-builder --index-url https://gitlab.com/api/v4/projects/29509688/packages/pypi/files/6823d8d3eb88dae38922006b2ec068233e79916d18c5e3d1a97a46684d08744c/kanod-image-builder
    - python3 -m pip install --user .
    - export PATH="${HOME}/.local/bin:/usr/local/bin:${PATH}"
  script:
    - export DISK_IMAGE_NAME=$DISK_IMAGE_NAME-${K8S_VERSION%-*}
    - export DISK_IMAGE_FILENAME=$DISK_IMAGE_NAME.$IMAGE_FORMAT
    - build-image sylva_imagebuilder -s target=$OS -s release=$OS_RELEASE $KANOD_OPTIONS --format $IMAGE_FORMAT -o $DISK_IMAGE_FILENAME
    - export sha256=$(sha256sum $DISK_IMAGE_FILENAME | awk '{ print $1 }')
    - echo $sha256
    - digest_url=$(
       GODEBUG=http2client=0 flux push artifact
       $REPO_URL/$DISK_IMAGE_NAME:$OCI_TAG_FORMAT
       --timeout 2h --path="$DISK_IMAGE_FILENAME"
       --source="${CI_REPOSITORY_URL/gitlab-ci-token*@/}"
       --revision="$(git tag --points-at HEAD)@sha1:$(git rev-parse HEAD)"
       --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
       --annotations sylvaproject.org/diskimage/filename=$DISK_IMAGE_FILENAME
       --annotations sylvaproject.org/diskimage/os=$OS
       --annotations sylvaproject.org/diskimage/os-release=$OS_RELEASE
       --annotations sylvaproject.org/diskimage/flavor=$FLAVOR
       --annotations sylvaproject.org/diskimage/k8s-flavor=$K8S_FLAVOR
       --annotations sylvaproject.org/diskimage/k8s-version=$K8S_VERSION
       --annotations sylvaproject.org/diskimage/sha256=$sha256
       --output json |
       jq -r '. | .repository + "@" + .digest')
    - |
      if [[ ${CI_COMMIT_TAG} && ${COSIGN_PRIVATE_KEY} ]]; then
        echo "-- Signing $DISK_IMAGE_NAME image"
        cosign login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        cosign sign -y --key env://COSIGN_PRIVATE_KEY $digest_url
      fi
    - echo "Image pushed at $REPO_URL/$DISK_IMAGE_NAME:$OCI_TAG_FORMAT"
    - echo "BUILD_IMAGE_$CI_JOB_ID=$REPO_URL/$DISK_IMAGE_NAME:$(git tag --points-at HEAD)" >> variables.env
    - echo "BUILD_CHECKSUM_$CI_JOB_ID=$(sha256sum $DISK_IMAGE_FILENAME | awk '{ print $1 }')" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env
  parallel:
    matrix:
      - K8S_VERSION:
        - 1.26.9-rke2r1
        - 1.25.14-rke2r1
        - 1.24.17-rke2r1
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual

build-ubuntu-hardened-rke2:
  extends: .build-image
  variables:
    OS: ubuntu
    OS_RELEASE: jammy
    FLAVOR: hardened
    K8S_FLAVOR: rke2
    KANOD_OPTIONS: "-b no_kanod_network -b cis_hardening -b lvm -b rke2_airgapped -b growpart"

build-ubuntu-plain-rke2:
  extends: .build-image
  variables:
    OS: ubuntu
    OS_RELEASE: jammy
    FLAVOR: plain
    K8S_FLAVOR: rke2
    KANOD_OPTIONS: "-b no_kanod_network -b rke2_airgapped"

build-ubuntu-plain-kubeadm:
  extends: .build-image
  variables:
    OS: ubuntu
    OS_RELEASE: jammy
    FLAVOR: plain
    K8S_FLAVOR: kubeadm
    KANOD_OPTIONS: "-b no_kanod_network -b kubeadm"

build-opensuse-plain-rke2:
  extends: .build-image
  image: registry.gitlab.com/sylva-projects/sylva-elements/container-images/ci-disk-image-builder/suse:v2.0.0
  variables:
    OS: opensuse
    OS_RELEASE: "15.5"
    FLAVOR: plain
    K8S_FLAVOR: rke2
    KANOD_OPTIONS: "-b no_kanod_network -b rke2_airgapped"

prepare_job:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED # Run this job when a tag is created for a protected branch
      when: always
  script:
    - |
      echo "EXTRA_DESCRIPTION=$(for artifact in $(env | grep BUILD_IMAGE); do
        job_id=$(echo ${artifact/=*/} | cut -d_ -f3)
        checksum="BUILD_CHECKSUM_$job_id"
        echo -n "<br /> Image: ${artifact/*=/}<br /> Checksum: ${!checksum}<br />"
      done
      )" >> variables.env
  artifacts:
    paths:
      - variables.env
    reports:
      dotenv: variables.env

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED # Run this job when a tag is created for a protected branch
      when: always
  script:
    - echo "running release_job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release content: <br /> $EXTRA_DESCRIPTION'
    ref: '$CI_COMMIT_SHA'
