#!/bin/bash
if [ "${DIB_DEBUG_TRACE:-0}" -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

# this is based on https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#k8s-install-2

K8S_VERSION=${K8S_VERSION%-*}  # remove the -... suffix
K8S_XY_VERSION=${K8S_VERSION%.*}  # remove the .z in x.y.z
ARCH="amd64"
CNI_DEST="/opt/cni/bin"
KUBEADM_DIR="/usr/local/bin"
CNI_PLUGINS_VERSION="v1.3.0"
CRICTL_VERSION="v$K8S_XY_VERSION.0"
RELEASE_VERSION="v0.15.1"

# Configure containerd
mkdir -p /etc/containerd
containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | tee /etc/containerd/config.toml
systemctl enable containerd.service

# Install CNI plugins
mkdir -p "$CNI_DEST"
curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_PLUGINS_VERSION}/cni-plugins-linux-${ARCH}-${CNI_PLUGINS_VERSION}.tgz" | tar -C "$CNI_DEST" -xz

# Install CRICTL align to the K8S version
curl -L "https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz" | tar -C $KUBEADM_DIR -xz

# Install kubeadm, kubelet, kubectl and kubelet systemd service
curl -L --remote-name-all --output-dir $KUBEADM_DIR https://dl.k8s.io/release/v${K8S_VERSION}/bin/linux/${ARCH}/{kubeadm,kubelet,kubectl}
chmod +x $KUBEADM_DIR/{kubeadm,kubelet,kubectl}
curl -sSL "https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service" | sed "s:/usr/bin:${KUBEADM_DIR}:g" | tee /etc/systemd/system/kubelet.service
mkdir -p /etc/systemd/system/kubelet.service.d
curl -sSL "https://raw.githubusercontent.com/kubernetes/release/${RELEASE_VERSION}/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf" | sed "s:/usr/bin:${KUBEADM_DIR}:g" | tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
systemctl enable kubelet.service
