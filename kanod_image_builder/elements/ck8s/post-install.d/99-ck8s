#!/bin/bash

#  Copyright (C) 2020-2021 Orange
#  Copyright 2025 Canonical Ltd.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.


set -eu

tee /etc/modules-load.d/kubernetes.conf <<EOF
overlay
br_netfilter
EOF
tee /etc/sysctl.d/kubernetes.conf <<EOF
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

K8S_VERSION=${K8S_VERSION%-*}  # remove the -... suffix
K8S_XY_VERSION=${K8S_VERSION%.*}  # remove the .z in x.y.z
SNAP_BIN_DIR="/capi/snap-binaries"

declare -A KNOWN_K8S_SNAPD_VERSIONS
declare -A KNOWN_CORE20_SNAPD_VERSIONS

K8S_VERSION_1_31_5="1.31.5"
K8S_VERSION_1_31_6="1.31.6"
K8S_VERSION_1_32_2="1.32.2"
K8S_VERSION_1_32_3="1.32.3"

KNOWN_K8S_SNAPD_VERSIONS[$K8S_VERSION_1_31_5]="2135"
KNOWN_CORE20_SNAPD_VERSIONS[$K8S_VERSION_1_31_5]="2434"

KNOWN_K8S_SNAPD_VERSIONS[$K8S_VERSION_1_31_6]="2830"
KNOWN_CORE20_SNAPD_VERSIONS[$K8S_VERSION_1_31_6]="2496"

KNOWN_K8S_SNAPD_VERSIONS[$K8S_VERSION_1_32_2]="2867"
KNOWN_CORE20_SNAPD_VERSIONS[$K8S_VERSION_1_32_2]="2496"

KNOWN_K8S_SNAPD_VERSIONS[$K8S_VERSION_1_32_3]="3315"
KNOWN_CORE20_SNAPD_VERSIONS[$K8S_VERSION_1_32_3]="2582"

K8S_SNAP_REVISION="${KNOWN_K8S_SNAPD_VERSIONS["${K8S_VERSION}"]}"
CORE20_SNAP_REVISION="${KNOWN_CORE20_SNAPD_VERSIONS["${K8S_VERSION}"]}"

if [ -z "${K8S_SNAP_REVISION}" ]; then
	echo "K8S_SNAP_REVISION for K8S_VERSION ${K8S_VERSION} has not been configured yet."
	exit 1
fi

if [ -z "${CORE20_SNAP_REVISION}" ]; then
	echo "CORE20_SNAP_REVISION for K8S_VERSION ${K8S_VERSION} has not been configured yet."
	exit 1
fi

# Support only Ubuntu style distro
if [[ ${DISTRO_NAME} =~ (ubuntu) ]]; then
        # snap installs fails on a chrooted env like the one created with disk image builder with
	# error: cannot communicate with server: Post "http://localhost/v2/snaps/k8s": dial unix /run/snapd.socket: connect: no such file or directory
	# snap install k8s --revision "${K8S_SNAP_REVISION}" --classic

	# FIXME(avladu)
	# Snaps cannot be installed in the chroot env, but can be downloaded and
	# installed at boot time
	mkdir -p "${SNAP_BIN_DIR}"

	snap download k8s --revision "${K8S_SNAP_REVISION}"
	mv "k8s_${K8S_SNAP_REVISION}.snap" "${SNAP_BIN_DIR}/k8s.snap"
	mv "k8s_${K8S_SNAP_REVISION}.assert" "${SNAP_BIN_DIR}/k8s.assert"

	snap download core20 --revision "${CORE20_SNAP_REVISION}"
	mv "core20_${CORE20_SNAP_REVISION}.snap" "${SNAP_BIN_DIR}/core20.snap"
	mv "core20_${CORE20_SNAP_REVISION}.assert" "${SNAP_BIN_DIR}/core20.assert"
else
	echo "Distro ${DISTRO_NAME} is not supported."
	exit 1
fi

